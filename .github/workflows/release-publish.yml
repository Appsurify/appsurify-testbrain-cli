name: "Release publish"

on:
  release:
    types: [released]

jobs:
  pypi-publish:
    name: "PyPi Publish"
    runs-on: ubuntu-latest
    steps:
      - name: "Set up Python"
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: "Set up Poetry"
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.7.1"
      - name: "Download built artifacts"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release download -D dist/ ${{ github.event.release.name }}
      - name: "Upload to PyPI"
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish
  docker-publish:
    name: "Docker Publish"
    runs-on: ubuntu-latest
    steps:
      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v2
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v2
      - name: "Login to DockerHub Container Registry"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: "Tag Latest"
        run: |
          echo "TAG!"
          # docker buildx imagetools create --tag appsurifyinc/appsurify-testbrain-cli:latest appsurifyinc/appsurify-testbrain-cli:${{ github.event.release.name }}
