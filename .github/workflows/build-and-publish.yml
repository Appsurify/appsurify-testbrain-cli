name: "Release and Publish to PyPi/Docker"

on:
  release:
    types: [published]

jobs:
  pypi:
    name: "Publish PyPi"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
      - name: "Set up Python"
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: "Set up Poetry"
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.6.1"
      - name: "Install dependencies"
        run: poetry install --without dev,test
      - name: "Build project for distribution"
        run: poetry build
      - name: "Publish to PyPI"
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish
  docker:
    name: "Publish Docker"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
      - name: "Set up Python"
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: "Set up Poetry"
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.6.1"
      - name: "Install dependencies"
        run: poetry install --without dev,test
      - name: "Build project for distribution"
        run: poetry build
      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v2
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v2
      - name: "Login to DockerHub Container Registry"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: "Build and Push Image"
        uses: docker/build-push-action@v4
        with:
          context: .
          file: compose/Dockerfile
          platforms: linux/amd64, linux/arm64
          tags: docker.io/appsurifyinc/appsurify-testbrain-cli:${{ github.event.release.name }}
          push: true
          cache-from: type=registry,ref=docker.io/appsurifyinc/appsurify-testbrain-cli:${{ github.event.release.name }}
      - name: "Mark as latest"
        run: docker buildx imagetools create --tag appsurifyinc/appsurify-testbrain-cli:latest appsurifyinc/appsurify-testbrain-cli:${{ github.event.release.name }}
