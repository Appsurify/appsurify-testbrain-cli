name: "Create pre-release"

on:
  push:
    tags:
      - "*.*.*"

jobs:
  create-branch:
    name: "Create branch"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Update version branch"
        run: |
          TAG_REF=${{ github.ref }}
          TAG_NAME=${TAG_REF:10} # Extract tag name from the ref string
          BRANCH_VERSION=${TAG_NAME:0:10} # Extract version without the patch level
          BRANCH_NAME="releases/$BRANCH_VERSION"

          echo "Detected tag: $TAG_NAME"
          echo "Checking for existing branch: $BRANCH_NAME"

          # Check if the branch exists in the remote repository
          BRANCH_EXISTS=$(git ls-remote --heads origin $BRANCH_NAME)

          if [[ -z "$BRANCH_EXISTS" ]]; then
            echo "Creating new branch: $BRANCH_NAME"
            git checkout -b $BRANCH_NAME
          else
            echo "Switching to existing branch: $BRANCH_NAME"
            git checkout $BRANCH_NAME
          fi

          # Reset the branch to point at the tag's commit
          echo "Resetting branch $BRANCH_NAME to commit of tag $TAG_NAME"
          git reset --hard $TAG_NAME
          git push -u origin $BRANCH_NAME --force
  build:
    name: "Create Pre Release"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
      - name: "Set up Python"
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: "Set up Poetry"
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.6.1"
      - name: "Install dependencies"
        run: poetry install --without dev,test
      - name: "Build project for distribution"
        run: poetry build
      - name: "Create Release"
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: true
